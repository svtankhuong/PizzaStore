/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import BUS.HoaDonBUS;
import DTO.ThongTinKMDTO;
import java.awt.Color;
import java.util.ArrayList;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class InforDiscount extends javax.swing.JFrame
{
    public InforDiscount()
    {
        initComponents();
        loadDataFromSource();
    }
    
    private SelectCustomerOrDiscount listener;
    
    public void setSelectDiscountListener(SelectCustomerOrDiscount listener) {
        this.listener = listener;
    }
    
   private void loadDataFromSource() {
        // --- Nạp dữ liệu cho Bảng Hóa Đơn ---
        DefaultTableModel modelHoaDon = (DefaultTableModel) TableDiscount.getModel();
        modelHoaDon.setRowCount(0); // Xóa dữ liệu cũ trước khi nạp mới
        try {
             HoaDonBUS a = new HoaDonBUS();
             ArrayList<ThongTinKMDTO> list_data = a.data_InforDiscount();
//         "Mã Khuyến Mãi", "Tên Khuyến Mãi", "Phần Trăm Giảm", "Ngày Kết Thúc", "Tên CTKM"
            if (list_data != null) {
                for(ThongTinKMDTO tt : list_data){
                    Object[] rowData = {
                        tt.getMaKM(),
                        tt.getTenKM(),
                        tt.getPhanTramGiam(),
                        tt.getNgayKetThuc().format(DateTimeFormatter.ofPattern("dd/MM/YYYY")),
                        tt.getTenCTKM()
                    };
                    modelHoaDon.addRow(rowData);
                }
            }
        } catch (Exception e) {
             JOptionPane.showMessageDialog(this, "Lỗi khi tải danh sách khuyên smãi: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel = new javax.swing.JLabel();
        SPane1 = new javax.swing.JScrollPane();
        TableDiscount = new javax.swing.JTable();
        BtnChooseDiscount = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 600));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel.setText("Bảng Khuyến Mãi");
        jPanel1.add(jLabel, new java.awt.GridBagConstraints());

        SPane1.getViewport().setBackground(Color.WHITE);
        SPane1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        TableDiscount.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        TableDiscount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Mã Khuyến Mãi", "Tên Khuyến Mãi", "Phần Trăm Giảm", "Ngày Kết Thúc", "Tên CTKM"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return false;
            }
        });
        SPane1.setViewportView(TableDiscount);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 520;
        gridBagConstraints.ipady = 400;
        jPanel1.add(SPane1, gridBagConstraints);

        BtnChooseDiscount.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        BtnChooseDiscount.setText("Chọn Khuyến Mãi");
        BtnChooseDiscount.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BtnChooseDiscountActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.ipady = 15;
        jPanel1.add(BtnChooseDiscount, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnChooseDiscountActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BtnChooseDiscountActionPerformed
    {//GEN-HEADEREND:event_BtnChooseDiscountActionPerformed
        int row = TableDiscount.getSelectedRow();
        if(row == -1){
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn dòng trong bảng thông tin khuyến mãi" , "Lỗi", JOptionPane.ERROR_MESSAGE);
        }else{
            String ten_km = TableDiscount.getModel().getValueAt(row, 1).toString();
            JOptionPane.showMessageDialog(this, String.format("Bạn đã khuyến mãi có tên là  %s", ten_km) , "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
            if(listener != null){
                listener.onDiscountSelected(ten_km);
            }
            this.dispose();
        }
    }//GEN-LAST:event_BtnChooseDiscountActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnChooseDiscount;
    private javax.swing.JScrollPane SPane1;
    private javax.swing.JTable TableDiscount;
    private javax.swing.JLabel jLabel;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
